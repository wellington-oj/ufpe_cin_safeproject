// This file was generated by Beaver v0.9.6.1

1:	EOF: REDUCE compilation_unit = 
	SEMICOLON: SHIFT; goto 9
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	INTERFACE: SHIFT; goto 642
	IMPORT: SHIFT; goto 678
	PACKAGE: SHIFT; goto 689
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 673
	class_declaration: SHIFT; goto 7
	interface_declaration: SHIFT; goto 8
	type_declaration: SHIFT; goto 675
	type_declarations: SHIFT; goto 688
	import_declaration: SHIFT; goto 685
	single_type_import_declaration: SHIFT; goto 676
	type_import_on_demand_declaration: SHIFT; goto 677
	import_declarations: SHIFT; goto 686
	package_declaration: SHIFT; goto 3
	compilation_unit: SHIFT; goto 2
	goal: ACCEPT
2:	EOF: REDUCE goal = compilation_unit.cu
3:	EOF: REDUCE compilation_unit = package_declaration.p
	SEMICOLON: SHIFT; goto 9
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	INTERFACE: SHIFT; goto 642
	IMPORT: SHIFT; goto 678
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 673
	class_declaration: SHIFT; goto 7
	interface_declaration: SHIFT; goto 8
	type_declaration: SHIFT; goto 675
	type_declarations: SHIFT; goto 684
	import_declaration: SHIFT; goto 685
	single_type_import_declaration: SHIFT; goto 676
	type_import_on_demand_declaration: SHIFT; goto 677
	import_declarations: SHIFT; goto 4
4:	EOF: REDUCE compilation_unit = package_declaration.p import_declarations.i
	SEMICOLON: SHIFT; goto 9
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	INTERFACE: SHIFT; goto 642
	IMPORT: SHIFT; goto 678
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 673
	class_declaration: SHIFT; goto 7
	interface_declaration: SHIFT; goto 8
	type_declaration: SHIFT; goto 675
	type_declarations: SHIFT; goto 5
	import_declaration: SHIFT; goto 674
	single_type_import_declaration: SHIFT; goto 676
	type_import_on_demand_declaration: SHIFT; goto 677
5:	EOF: REDUCE compilation_unit = package_declaration.p import_declarations.i type_declarations.t
	SEMICOLON: SHIFT; goto 9
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	INTERFACE: SHIFT; goto 642
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 673
	class_declaration: SHIFT; goto 7
	interface_declaration: SHIFT; goto 8
	type_declaration: SHIFT; goto 6
6:	[any]: REDUCE type_declarations = type_declarations.l type_declaration.t
7:	[any]: REDUCE type_declaration = class_declaration.c
8:	[any]: REDUCE type_declaration = interface_declaration.i
9:	[any]: REDUCE type_declaration = SEMICOLON.SEMICOLON
10:	IDENTIFIER: SHIFT; goto 11
11:	LBRACE: SHIFT; goto 17
	EXTENDS: SHIFT; goto 73
	IMPLEMENTS: SHIFT; goto 59
	class_body: SHIFT; goto 12
	interfaces: SHIFT; goto 671
	super: SHIFT; goto 13
12:	[any]: REDUCE class_declaration = CLASS.CLASS IDENTIFIER.IDENTIFIER class_body.b
13:	LBRACE: SHIFT; goto 17
	IMPLEMENTS: SHIFT; goto 59
	class_body: SHIFT; goto 14
	interfaces: SHIFT; goto 15
14:	[any]: REDUCE class_declaration = CLASS.CLASS IDENTIFIER.IDENTIFIER super.s class_body.b
15:	LBRACE: SHIFT; goto 17
	class_body: SHIFT; goto 16
16:	[any]: REDUCE class_declaration = CLASS.CLASS IDENTIFIER.IDENTIFIER super.s interfaces.i class_body.b
17:	IDENTIFIER: SHIFT; goto 544
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 659
	SEMICOLON: SHIFT; goto 33
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 35
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: REDUCE class_body_declarations_opt = 
	INTERFACE: SHIFT; goto 642
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 591
	block: SHIFT; goto 34
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 649
	error: SHIFT; goto 26
	class_declaration: SHIFT; goto 31
	interface_declaration: SHIFT; goto 32
	method_header: SHIFT; goto 666
	field_declaration: SHIFT; goto 29
	class_body_declaration: SHIFT; goto 670
	class_member_declaration: SHIFT; goto 22
	instance_initializer: SHIFT; goto 23
	static_initializer: SHIFT; goto 24
	constructor_declaration: SHIFT; goto 25
	method_declaration: SHIFT; goto 30
	class_body_declarations: SHIFT; goto 20
	class_body_declarations_opt: SHIFT; goto 18
18:	RBRACE: SHIFT; goto 19
19:	[any]: REDUCE class_body = LBRACE.LBRACE class_body_declarations_opt.c RBRACE.RBRACE
20:	IDENTIFIER: SHIFT; goto 544
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 659
	SEMICOLON: SHIFT; goto 33
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 35
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: REDUCE class_body_declarations_opt = class_body_declarations.n
	INTERFACE: SHIFT; goto 642
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 591
	block: SHIFT; goto 34
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 649
	error: SHIFT; goto 26
	class_declaration: SHIFT; goto 31
	interface_declaration: SHIFT; goto 32
	method_header: SHIFT; goto 666
	field_declaration: SHIFT; goto 29
	class_body_declaration: SHIFT; goto 21
	class_member_declaration: SHIFT; goto 22
	instance_initializer: SHIFT; goto 23
	static_initializer: SHIFT; goto 24
	constructor_declaration: SHIFT; goto 25
	method_declaration: SHIFT; goto 30
21:	[any]: REDUCE class_body_declarations = class_body_declarations.l class_body_declaration.c
22:	[any]: REDUCE class_body_declaration = class_member_declaration.c
23:	[any]: REDUCE class_body_declaration = instance_initializer.i
24:	[any]: REDUCE class_body_declaration = static_initializer.si
25:	[any]: REDUCE class_body_declaration = constructor_declaration.c
26:	SEMICOLON: SHIFT; goto 27
	LBRACE: SHIFT; goto 28
27:	[any]: REDUCE class_body_declaration = error.error SEMICOLON.SEMICOLON
28:	[any]: REDUCE class_body_declaration = error.error LBRACE.LBRACE
29:	[any]: REDUCE class_member_declaration = field_declaration.f
30:	[any]: REDUCE class_member_declaration = method_declaration.m
31:	[any]: REDUCE class_member_declaration = class_declaration.c
32:	[any]: REDUCE class_member_declaration = interface_declaration.i
33:	[any]: REDUCE class_member_declaration = SEMICOLON.SEMICOLON
34:	[any]: REDUCE instance_initializer = block.b
35:	LBRACE: SHIFT; goto 37
	block: SHIFT; goto 36
	[any]: REDUCE modifier = STATIC.STATIC
36:	[any]: REDUCE static_initializer = STATIC.STATIC block.b
37:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: REDUCE block_statements_opt = 
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 40
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 490
	local_variable_declaration_statement: SHIFT; goto 45
	block_statements: SHIFT; goto 43
	block_statements_opt: SHIFT; goto 38
38:	RBRACE: SHIFT; goto 39
39:	[any]: REDUCE block = LBRACE.LBRACE block_statements_opt.l RBRACE.RBRACE
40:	SEMICOLON: SHIFT; goto 42
	RBRACE: SHIFT; goto 41
41:	[any]: REDUCE block = LBRACE.LBRACE error.error RBRACE.RBRACE
42:	[any]: REDUCE statement = error.error SEMICOLON.SEMICOLON
43:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: REDUCE block_statements_opt = block_statements.n
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 44
	local_variable_declaration_statement: SHIFT; goto 45
44:	[any]: REDUCE block_statements = block_statements.l block_statement.b
45:	[any]: REDUCE block_statement = local_variable_declaration_statement.l
46:	[any]: REDUCE block_statement = class_declaration.c
47:	[any]: REDUCE block_statement = statement.s
48:	SEMICOLON: SHIFT; goto 49
49:	[any]: REDUCE local_variable_declaration_statement = local_variable_declaration.l SEMICOLON.SEMICOLON
50:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 52
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 51
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 76
51:	[any]: REDUCE modifiers = modifiers.l modifier.m
52:	IDENTIFIER: SHIFT; goto 53
53:	LBRACE: SHIFT; goto 17
	EXTENDS: SHIFT; goto 73
	IMPLEMENTS: SHIFT; goto 59
	class_body: SHIFT; goto 54
	interfaces: SHIFT; goto 71
	super: SHIFT; goto 55
54:	[any]: REDUCE class_declaration = modifiers.m CLASS.CLASS IDENTIFIER.IDENTIFIER class_body.b
55:	LBRACE: SHIFT; goto 17
	IMPLEMENTS: SHIFT; goto 59
	class_body: SHIFT; goto 56
	interfaces: SHIFT; goto 57
56:	[any]: REDUCE class_declaration = modifiers.m CLASS.CLASS IDENTIFIER.IDENTIFIER super.s class_body.b
57:	LBRACE: SHIFT; goto 17
	class_body: SHIFT; goto 58
58:	[any]: REDUCE class_declaration = modifiers.m CLASS.CLASS IDENTIFIER.IDENTIFIER super.s interfaces.i class_body.b
59:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 64
	qualified_name: SHIFT; goto 69
	class_or_interface_type: SHIFT; goto 63
	interface_type: SHIFT; goto 70
	interface_type_list: SHIFT; goto 60
60:	LBRACE: REDUCE interfaces = IMPLEMENTS.IMPLEMENTS interface_type_list.i
	COMMA: SHIFT; goto 61
61:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 64
	qualified_name: SHIFT; goto 69
	class_or_interface_type: SHIFT; goto 63
	interface_type: SHIFT; goto 62
62:	[any]: REDUCE interface_type_list = interface_type_list.l COMMA.COMMA interface_type.i
63:	[any]: REDUCE interface_type = class_or_interface_type.n
64:	DOT: SHIFT; goto 65
	[any]: REDUCE class_or_interface_type = name.n
65:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 66
66:	[any]: REDUCE qualified_name = name.n DOT.DOT simple_name.i
67:	[any]: REDUCE simple_name = IDENTIFIER.IDENTIFIER
68:	[any]: REDUCE name = simple_name.s
69:	[any]: REDUCE name = qualified_name.q
70:	[any]: REDUCE interface_type_list = interface_type.i
71:	LBRACE: SHIFT; goto 17
	class_body: SHIFT; goto 72
72:	[any]: REDUCE class_declaration = modifiers.m CLASS.CLASS IDENTIFIER.IDENTIFIER interfaces.i class_body.b
73:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 64
	qualified_name: SHIFT; goto 69
	class_or_interface_type: SHIFT; goto 75
	class_type: SHIFT; goto 74
74:	[any]: REDUCE super = EXTENDS.EXTENDS class_type.c
75:	[any]: REDUCE class_type = class_or_interface_type.n
76:	IDENTIFIER: SHIFT; goto 336
	variable_declarator: SHIFT; goto 339
	variable_declarator_id: SHIFT; goto 80
	variable_declarators: SHIFT; goto 77
77:	SEMICOLON: REDUCE local_variable_declaration = modifiers.m type.t variable_declarators.l
	COMMA: SHIFT; goto 78
78:	IDENTIFIER: SHIFT; goto 336
	variable_declarator: SHIFT; goto 79
	variable_declarator_id: SHIFT; goto 80
79:	[any]: REDUCE variable_declarators = variable_declarators.l COMMA.COMMA variable_declarator.v
80:	EQ: SHIFT; goto 81
	[any]: REDUCE variable_declarator = variable_declarator_id.v
81:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	LBRACE: SHIFT; goto 86
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 83
	array_initializer: SHIFT; goto 84
	variable_initializer: SHIFT; goto 82
82:	[any]: REDUCE variable_declarator = variable_declarator_id.v EQ.EQ variable_initializer.i
83:	[any]: REDUCE variable_initializer = expression.e
84:	[any]: REDUCE variable_initializer = array_initializer.a
85:	[any]: REDUCE expression = assignment_expression.a
86:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	LBRACE: SHIFT; goto 86
	RBRACE: SHIFT; goto 87
	COMMA: SHIFT; goto 333
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 83
	array_initializer: SHIFT; goto 84
	variable_initializer: SHIFT; goto 335
	variable_initializers: SHIFT; goto 88
87:	[any]: REDUCE array_initializer = LBRACE.LBRACE RBRACE.RBRACE
88:	RBRACE: SHIFT; goto 89
	COMMA: SHIFT; goto 90
89:	[any]: REDUCE array_initializer = LBRACE.LBRACE variable_initializers.v RBRACE.RBRACE
90:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	LBRACE: SHIFT; goto 86
	RBRACE: SHIFT; goto 91
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 83
	array_initializer: SHIFT; goto 84
	variable_initializer: SHIFT; goto 92
91:	[any]: REDUCE array_initializer = LBRACE.LBRACE variable_initializers.v COMMA.COMMA RBRACE.RBRACE
92:	[any]: REDUCE variable_initializers = variable_initializers.l COMMA.COMMA variable_initializer.v
93:	[any]: REDUCE assignment_expression = conditional_expression.c
94:	[any]: REDUCE assignment_expression = assignment.a
95:	QUESTION: SHIFT; goto 329
	OROR: SHIFT; goto 96
	[any]: REDUCE conditional_expression = conditional_or_expression.c
96:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 97
97:	ANDAND: SHIFT; goto 98
	[any]: REDUCE conditional_or_expression = conditional_or_expression.e1 OROR.OROR conditional_and_expression.e2
98:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 99
99:	OR: SHIFT; goto 100
	[any]: REDUCE conditional_and_expression = conditional_and_expression.e1 ANDAND.ANDAND inclusive_or_expression.e2
100:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 101
101:	XOR: SHIFT; goto 102
	[any]: REDUCE inclusive_or_expression = inclusive_or_expression.e1 OR.OR exclusive_or_expression.e2
102:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 103
103:	AND: SHIFT; goto 104
	[any]: REDUCE exclusive_or_expression = exclusive_or_expression.e1 XOR.XOR and_expression.e2
104:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 105
105:	EQEQ: SHIFT; goto 106
	NOTEQ: SHIFT; goto 226
	[any]: REDUCE and_expression = and_expression.e1 AND.AND equality_expression.e2
106:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 107
107:	LT: SHIFT; goto 108
	GT: SHIFT; goto 228
	LTEQ: SHIFT; goto 252
	GTEQ: SHIFT; goto 254
	INSTANCEOF: SHIFT; goto 256
	[any]: REDUCE equality_expression = equality_expression.e1 EQEQ.EQEQ relational_expression.e2
108:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 109
109:	LSHIFT: SHIFT; goto 110
	RSHIFT: SHIFT; goto 230
	URSHIFT: SHIFT; goto 249
	[any]: REDUCE relational_expression = relational_expression.e1 LT.LT shift_expression.e2
110:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 111
111:	PLUS: SHIFT; goto 112
	MINUS: SHIFT; goto 232
	[any]: REDUCE shift_expression = shift_expression.e1 LSHIFT.LSHIFT additive_expression.e2
112:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 113
113:	MULT: SHIFT; goto 114
	DIV: SHIFT; goto 234
	MOD: SHIFT; goto 245
	[any]: REDUCE additive_expression = additive_expression.e1 PLUS.PLUS multiplicative_expression.e2
114:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 115
115:	[any]: REDUCE multiplicative_expression = multiplicative_expression.e1 MULT.MULT unary_expression.e2
116:	[any]: REDUCE unary_expression = preincrement_expression.e
117:	[any]: REDUCE unary_expression = predecrement_expression.e
118:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 119
119:	[any]: REDUCE unary_expression = PLUS.PLUS unary_expression.e
120:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 121
121:	[any]: REDUCE unary_expression = MINUS.MINUS unary_expression.e
122:	[any]: REDUCE unary_expression = unary_expression_not_plus_minus.e
123:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 124
124:	[any]: REDUCE preincrement_expression = PLUSPLUS.PLUSPLUS unary_expression.e
125:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 126
126:	[any]: REDUCE predecrement_expression = MINUSMINUS.MINUSMINUS unary_expression.e
127:	PLUSPLUS: SHIFT; goto 128
	MINUSMINUS: SHIFT; goto 129
	[any]: REDUCE unary_expression_not_plus_minus = postfix_expression.e
128:	[any]: REDUCE postincrement_expression = postfix_expression.e PLUSPLUS.PLUSPLUS
129:	[any]: REDUCE postdecrement_expression = postfix_expression.e MINUSMINUS.MINUSMINUS
130:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 131
131:	[any]: REDUCE unary_expression_not_plus_minus = COMP.COMP unary_expression.e
132:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 133
133:	[any]: REDUCE unary_expression_not_plus_minus = NOT.NOT unary_expression.e
134:	[any]: REDUCE unary_expression_not_plus_minus = cast_expression.e
135:	DOT: SHIFT; goto 136
	[any]: REDUCE postfix_expression = primary.p
136:	IDENTIFIER: SHIFT; goto 325
	NEW: SHIFT; goto 137
	simple_name: SHIFT; goto 324
137:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 138
138:	LPAREN: SHIFT; goto 139
139:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 140
	argument_list: SHIFT; goto 144
140:	RPAREN: SHIFT; goto 141
141:	LBRACE: SHIFT; goto 17
	class_body: SHIFT; goto 143
	subclass_body: SHIFT; goto 142
	[any]: REDUCE class_instance_creation_expression = primary.n DOT.DOT NEW.NEW simple_name.id LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN
142:	[any]: REDUCE class_instance_creation_expression = primary.n DOT.DOT NEW.NEW simple_name.id LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN subclass_body.b
143:	[any]: REDUCE subclass_body = class_body.b
144:	RPAREN: REDUCE argument_list_opt = argument_list.n
	COMMA: SHIFT; goto 145
145:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 146
146:	[any]: REDUCE argument_list = argument_list.l COMMA.COMMA expression.e
147:	PLUSPLUS: SHIFT; goto 128
	MINUSMINUS: SHIFT; goto 129
	EQ: SHIFT; goto 148
	MULTEQ: SHIFT; goto 302
	DIVEQ: SHIFT; goto 304
	MODEQ: SHIFT; goto 306
	PLUSEQ: SHIFT; goto 308
	MINUSEQ: SHIFT; goto 310
	LSHIFTEQ: SHIFT; goto 312
	RSHIFTEQ: SHIFT; goto 314
	URSHIFTEQ: SHIFT; goto 316
	ANDEQ: SHIFT; goto 318
	XOREQ: SHIFT; goto 320
	OREQ: SHIFT; goto 322
	[any]: REDUCE unary_expression_not_plus_minus = postfix_expression.e
148:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 149
149:	[any]: REDUCE assignment = postfix_expression.dest EQ.EQ assignment_expression.source
150:	ANDAND: SHIFT; goto 98
	[any]: REDUCE conditional_or_expression = conditional_and_expression.e
151:	LPAREN: SHIFT; goto 282
	LBRACK: SHIFT; goto 285
	DOT: SHIFT; goto 152
	dims: SHIFT; goto 301
	[any]: REDUCE postfix_expression = name.n
152:	IDENTIFIER: SHIFT; goto 67
	NEW: SHIFT; goto 155
	SUPER: SHIFT; goto 294
	THIS: SHIFT; goto 154
	CLASS: SHIFT; goto 176
	simple_name: SHIFT; goto 66
	class_literal: SHIFT; goto 153
153:	[any]: REDUCE primary_no_new_array = name.n DOT.DOT class_literal.c
154:	[any]: REDUCE primary_no_new_array = name.n DOT.DOT THIS.THIS
155:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 156
156:	LPAREN: SHIFT; goto 157
157:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 158
	argument_list: SHIFT; goto 144
158:	RPAREN: SHIFT; goto 159
159:	LBRACE: SHIFT; goto 17
	class_body: SHIFT; goto 143
	subclass_body: SHIFT; goto 160
	[any]: REDUCE class_instance_creation_expression = name.n DOT.DOT NEW.NEW simple_name.id LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN
160:	[any]: REDUCE class_instance_creation_expression = name.n DOT.DOT NEW.NEW simple_name.id LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN subclass_body.b
161:	[any]: REDUCE argument_list = expression.e
162:	[any]: REDUCE postfix_expression = postincrement_expression.e
163:	[any]: REDUCE postfix_expression = postdecrement_expression.e
164:	OR: SHIFT; goto 100
	[any]: REDUCE conditional_and_expression = inclusive_or_expression.e
165:	LBRACK: SHIFT; goto 166
	[any]: REDUCE primary = primary_no_new_array.p
166:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 167
167:	RBRACK: SHIFT; goto 168
168:	[any]: REDUCE array_access = primary_no_new_array.p LBRACK.LBRACK expression.e RBRACK.RBRACK
169:	[any]: REDUCE primary = array_creation_init.a
170:	[any]: REDUCE primary = array_creation_uninit.a
171:	XOR: SHIFT; goto 102
	[any]: REDUCE inclusive_or_expression = exclusive_or_expression.e
172:	[any]: REDUCE primary_no_new_array = literal.l
173:	LBRACK: SHIFT; goto 182
	DOT: SHIFT; goto 174
	dims: SHIFT; goto 177
174:	CLASS: SHIFT; goto 176
	class_literal: SHIFT; goto 175
175:	[any]: REDUCE primary_no_new_array = primitive_type.n DOT.DOT class_literal.c
176:	[any]: REDUCE class_literal = CLASS.CLASS
177:	LBRACK: SHIFT; goto 180
	DOT: SHIFT; goto 178
178:	CLASS: SHIFT; goto 176
	class_literal: SHIFT; goto 179
179:	[any]: REDUCE primary_no_new_array = primitive_type.n dims.d DOT.DOT class_literal.c
180:	RBRACK: SHIFT; goto 181
181:	[any]: REDUCE dims = dims.l LBRACK.LBRACK RBRACK.RBRACK
182:	RBRACK: SHIFT; goto 183
183:	[any]: REDUCE dims = LBRACK.LBRACK RBRACK.RBRACK
184:	DOT: SHIFT; goto 185
185:	CLASS: SHIFT; goto 176
	class_literal: SHIFT; goto 186
186:	[any]: REDUCE primary_no_new_array = VOID.VOID DOT.DOT class_literal.c
187:	[any]: REDUCE primary_no_new_array = THIS.THIS
188:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 191
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 288
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 189
189:	RPAREN: SHIFT; goto 190
190:	[any]: REDUCE primary_no_new_array = LPAREN.LPAREN expression.e RPAREN.RPAREN
191:	LPAREN: SHIFT; goto 282
	RPAREN: SHIFT; goto 280
	LBRACK: SHIFT; goto 285
	DOT: SHIFT; goto 152
	dims: SHIFT; goto 192
	[any]: REDUCE postfix_expression = name.n
192:	RPAREN: SHIFT; goto 195
	LBRACK: SHIFT; goto 180
	DOT: SHIFT; goto 193
193:	CLASS: SHIFT; goto 176
	class_literal: SHIFT; goto 194
194:	[any]: REDUCE primary_no_new_array = name.n dims.d DOT.DOT class_literal.c
195:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	unary_expression_not_plus_minus: SHIFT; goto 196
	cast_expression: SHIFT; goto 134
196:	[any]: REDUCE cast_expression = LPAREN.LPAREN name.t dims.d RPAREN.RPAREN unary_expression_not_plus_minus.e
197:	[any]: REDUCE primary_no_new_array = class_instance_creation_expression.c
198:	[any]: REDUCE primary_no_new_array = field_access.f
199:	[any]: REDUCE primary_no_new_array = method_invocation.m
200:	[any]: REDUCE primary_no_new_array = array_access.a
201:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 64
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 275
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 202
202:	LPAREN: SHIFT; goto 203
	LBRACK: SHIFT; goto 269
	dims: SHIFT; goto 272
	dim_expr: SHIFT; goto 274
	dim_exprs: SHIFT; goto 266
203:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 204
	argument_list: SHIFT; goto 144
204:	RPAREN: SHIFT; goto 205
205:	LBRACE: SHIFT; goto 17
	class_body: SHIFT; goto 143
	subclass_body: SHIFT; goto 206
	[any]: REDUCE class_instance_creation_expression = NEW.NEW class_or_interface_type.t LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN
206:	[any]: REDUCE class_instance_creation_expression = NEW.NEW class_or_interface_type.t LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN subclass_body.b
207:	AND: SHIFT; goto 104
	[any]: REDUCE exclusive_or_expression = and_expression.e
208:	[any]: REDUCE literal = INTEGER_LITERAL.INTEGER_LITERAL
209:	[any]: REDUCE literal = LONG_LITERAL.LONG_LITERAL
210:	[any]: REDUCE literal = FLOATING_POINT_LITERAL.FLOATING_POINT_LITERAL
211:	[any]: REDUCE literal = DOUBLE_LITERAL.DOUBLE_LITERAL
212:	[any]: REDUCE literal = BOOLEAN_LITERAL.BOOLEAN_LITERAL
213:	[any]: REDUCE literal = CHARACTER_LITERAL.CHARACTER_LITERAL
214:	[any]: REDUCE literal = STRING_LITERAL.STRING_LITERAL
215:	[any]: REDUCE literal = NULL_LITERAL.NULL_LITERAL
216:	[any]: REDUCE primitive_type = numeric_type.t
217:	[any]: REDUCE primitive_type = BOOLEAN.BOOLEAN
218:	DOT: SHIFT; goto 219
219:	IDENTIFIER: SHIFT; goto 221
	simple_name: SHIFT; goto 220
220:	[any]: REDUCE field_access = SUPER.SUPER DOT.DOT simple_name.id
221:	LPAREN: SHIFT; goto 222
	[any]: REDUCE simple_name = IDENTIFIER.IDENTIFIER
222:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 223
	argument_list: SHIFT; goto 144
223:	RPAREN: SHIFT; goto 224
224:	[any]: REDUCE method_invocation = SUPER.SUPER DOT.DOT IDENTIFIER.IDENTIFIER LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN
225:	EQEQ: SHIFT; goto 106
	NOTEQ: SHIFT; goto 226
	[any]: REDUCE and_expression = equality_expression.e
226:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 227
227:	LT: SHIFT; goto 108
	GT: SHIFT; goto 228
	LTEQ: SHIFT; goto 252
	GTEQ: SHIFT; goto 254
	INSTANCEOF: SHIFT; goto 256
	[any]: REDUCE equality_expression = equality_expression.e1 NOTEQ.NOTEQ relational_expression.e2
228:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 229
229:	LSHIFT: SHIFT; goto 110
	RSHIFT: SHIFT; goto 230
	URSHIFT: SHIFT; goto 249
	[any]: REDUCE relational_expression = relational_expression.e1 GT.GT shift_expression.e2
230:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 231
231:	PLUS: SHIFT; goto 112
	MINUS: SHIFT; goto 232
	[any]: REDUCE shift_expression = shift_expression.e1 RSHIFT.RSHIFT additive_expression.e2
232:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 233
233:	MULT: SHIFT; goto 114
	DIV: SHIFT; goto 234
	MOD: SHIFT; goto 245
	[any]: REDUCE additive_expression = additive_expression.e1 MINUS.MINUS multiplicative_expression.e2
234:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 235
235:	[any]: REDUCE multiplicative_expression = multiplicative_expression.e1 DIV.DIV unary_expression.e2
236:	[any]: REDUCE numeric_type = integral_type.t
237:	[any]: REDUCE numeric_type = floating_point_type.t
238:	[any]: REDUCE integral_type = BYTE.BYTE
239:	[any]: REDUCE integral_type = SHORT.SHORT
240:	[any]: REDUCE integral_type = INT.INT
241:	[any]: REDUCE integral_type = LONG.LONG
242:	[any]: REDUCE integral_type = CHAR.CHAR
243:	[any]: REDUCE floating_point_type = FLOAT.FLOAT
244:	[any]: REDUCE floating_point_type = DOUBLE.DOUBLE
245:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 246
246:	[any]: REDUCE multiplicative_expression = multiplicative_expression.e1 MOD.MOD unary_expression.e2
247:	[any]: REDUCE multiplicative_expression = unary_expression.e
248:	MULT: SHIFT; goto 114
	DIV: SHIFT; goto 234
	MOD: SHIFT; goto 245
	[any]: REDUCE additive_expression = multiplicative_expression.e
249:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 250
250:	PLUS: SHIFT; goto 112
	MINUS: SHIFT; goto 232
	[any]: REDUCE shift_expression = shift_expression.e1 URSHIFT.URSHIFT additive_expression.e2
251:	PLUS: SHIFT; goto 112
	MINUS: SHIFT; goto 232
	[any]: REDUCE shift_expression = additive_expression.e
252:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 253
253:	LSHIFT: SHIFT; goto 110
	RSHIFT: SHIFT; goto 230
	URSHIFT: SHIFT; goto 249
	[any]: REDUCE relational_expression = relational_expression.e1 LTEQ.LTEQ shift_expression.e2
254:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 255
255:	LSHIFT: SHIFT; goto 110
	RSHIFT: SHIFT; goto 230
	URSHIFT: SHIFT; goto 249
	[any]: REDUCE relational_expression = relational_expression.e1 GTEQ.GTEQ shift_expression.e2
256:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 262
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	reference_type: SHIFT; goto 257
	array_type: SHIFT; goto 259
257:	[any]: REDUCE relational_expression = relational_expression.e INSTANCEOF.INSTANCEOF reference_type.t
258:	[any]: REDUCE reference_type = class_or_interface_type.t
259:	[any]: REDUCE reference_type = array_type.t
260:	LBRACK: SHIFT; goto 182
	DOT: SHIFT; goto 65
	dims: SHIFT; goto 261
	[any]: REDUCE class_or_interface_type = name.n
261:	LBRACK: SHIFT; goto 180
	[any]: REDUCE array_type = name.n dims.d
262:	LBRACK: SHIFT; goto 182
	dims: SHIFT; goto 263
263:	LBRACK: SHIFT; goto 180
	[any]: REDUCE array_type = primitive_type.t dims.d
264:	LSHIFT: SHIFT; goto 110
	RSHIFT: SHIFT; goto 230
	URSHIFT: SHIFT; goto 249
	[any]: REDUCE relational_expression = shift_expression.e
265:	LT: SHIFT; goto 108
	GT: SHIFT; goto 228
	LTEQ: SHIFT; goto 252
	GTEQ: SHIFT; goto 254
	INSTANCEOF: SHIFT; goto 256
	[any]: REDUCE equality_expression = relational_expression.e
266:	LBRACK: SHIFT; goto 269
	dims: SHIFT; goto 267
	dim_expr: SHIFT; goto 268
	[any]: REDUCE array_creation_uninit = NEW.NEW class_or_interface_type.t dim_exprs.d
267:	LBRACK: SHIFT; goto 180
	[any]: REDUCE array_creation_uninit = NEW.NEW class_or_interface_type.t dim_exprs.d dims.e
268:	[any]: REDUCE dim_exprs = dim_exprs.l dim_expr.e
269:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RBRACK: SHIFT; goto 183
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 270
270:	RBRACK: SHIFT; goto 271
271:	[any]: REDUCE dim_expr = LBRACK.LBRACK expression.e RBRACK.RBRACK
272:	LBRACE: SHIFT; goto 86
	LBRACK: SHIFT; goto 180
	array_initializer: SHIFT; goto 273
273:	[any]: REDUCE array_creation_init = NEW.NEW class_or_interface_type.t dims.d array_initializer.i
274:	[any]: REDUCE dim_exprs = dim_expr.e
275:	LBRACK: SHIFT; goto 269
	dims: SHIFT; goto 278
	dim_expr: SHIFT; goto 274
	dim_exprs: SHIFT; goto 276
276:	LBRACK: SHIFT; goto 269
	dims: SHIFT; goto 277
	dim_expr: SHIFT; goto 268
	[any]: REDUCE array_creation_uninit = NEW.NEW primitive_type.t dim_exprs.d
277:	LBRACK: SHIFT; goto 180
	[any]: REDUCE array_creation_uninit = NEW.NEW primitive_type.t dim_exprs.d dims.e
278:	LBRACE: SHIFT; goto 86
	LBRACK: SHIFT; goto 180
	array_initializer: SHIFT; goto 279
279:	[any]: REDUCE array_creation_init = NEW.NEW primitive_type.t dims.d array_initializer.i
280:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	unary_expression_not_plus_minus: SHIFT; goto 281
	cast_expression: SHIFT; goto 134
	[any]: REDUCE primary_no_new_array = LPAREN.LPAREN name.n RPAREN.RPAREN
281:	[any]: REDUCE cast_expression = LPAREN.LPAREN name.t RPAREN.RPAREN unary_expression_not_plus_minus.e
282:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 283
	argument_list: SHIFT; goto 144
283:	RPAREN: SHIFT; goto 284
284:	[any]: REDUCE method_invocation = name.n LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN
285:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RBRACK: SHIFT; goto 183
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 286
286:	RBRACK: SHIFT; goto 287
287:	[any]: REDUCE array_access = name.n LBRACK.LBRACK expression.e RBRACK.RBRACK
288:	RPAREN: SHIFT; goto 292
	LBRACK: SHIFT; goto 182
	DOT: SHIFT; goto 174
	dims: SHIFT; goto 289
289:	RPAREN: SHIFT; goto 290
	LBRACK: SHIFT; goto 180
	DOT: SHIFT; goto 178
290:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 291
291:	[any]: REDUCE cast_expression = LPAREN.LPAREN primitive_type.t dims.d RPAREN.RPAREN unary_expression.e
292:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 293
293:	[any]: REDUCE cast_expression = LPAREN.LPAREN primitive_type.t RPAREN.RPAREN unary_expression.e
294:	DOT: SHIFT; goto 295
295:	IDENTIFIER: SHIFT; goto 297
	simple_name: SHIFT; goto 296
296:	[any]: REDUCE field_access = name.n DOT.DOT SUPER.SUPER DOT.DOT_ simple_name.id
297:	LPAREN: SHIFT; goto 298
	[any]: REDUCE simple_name = IDENTIFIER.IDENTIFIER
298:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 299
	argument_list: SHIFT; goto 144
299:	RPAREN: SHIFT; goto 300
300:	[any]: REDUCE method_invocation = name.n DOT.DOT SUPER.SUPER DOT.DOT_ IDENTIFIER.IDENTIFIER LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN
301:	LBRACK: SHIFT; goto 180
	DOT: SHIFT; goto 193
302:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 303
303:	[any]: REDUCE assignment = postfix_expression.dest MULTEQ.MULTEQ assignment_expression.source
304:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 305
305:	[any]: REDUCE assignment = postfix_expression.dest DIVEQ.DIVEQ assignment_expression.source
306:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 307
307:	[any]: REDUCE assignment = postfix_expression.dest MODEQ.MODEQ assignment_expression.source
308:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 309
309:	[any]: REDUCE assignment = postfix_expression.dest PLUSEQ.PLUSEQ assignment_expression.source
310:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 311
311:	[any]: REDUCE assignment = postfix_expression.dest MINUSEQ.MINUSEQ assignment_expression.source
312:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 313
313:	[any]: REDUCE assignment = postfix_expression.dest LSHIFTEQ.LSHIFTEQ assignment_expression.source
314:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 315
315:	[any]: REDUCE assignment = postfix_expression.dest RSHIFTEQ.RSHIFTEQ assignment_expression.source
316:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 317
317:	[any]: REDUCE assignment = postfix_expression.dest URSHIFTEQ.URSHIFTEQ assignment_expression.source
318:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 319
319:	[any]: REDUCE assignment = postfix_expression.dest ANDEQ.ANDEQ assignment_expression.source
320:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 321
321:	[any]: REDUCE assignment = postfix_expression.dest XOREQ.XOREQ assignment_expression.source
322:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 323
323:	[any]: REDUCE assignment = postfix_expression.dest OREQ.OREQ assignment_expression.source
324:	[any]: REDUCE field_access = primary.p DOT.DOT simple_name.id
325:	LPAREN: SHIFT; goto 326
	[any]: REDUCE simple_name = IDENTIFIER.IDENTIFIER
326:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 327
	argument_list: SHIFT; goto 144
327:	RPAREN: SHIFT; goto 328
328:	[any]: REDUCE method_invocation = primary.p DOT.DOT IDENTIFIER.IDENTIFIER LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN
329:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 330
330:	COLON: SHIFT; goto 331
331:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 127
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 332
332:	[any]: REDUCE conditional_expression = conditional_or_expression.c QUESTION.QUESTION expression.e1 COLON.COLON conditional_expression.e2
333:	RBRACE: SHIFT; goto 334
334:	[any]: REDUCE array_initializer = LBRACE.LBRACE COMMA.COMMA RBRACE.RBRACE
335:	[any]: REDUCE variable_initializers = variable_initializer.v
336:	LBRACK: SHIFT; goto 182
	dims: SHIFT; goto 338
	dims_opt: SHIFT; goto 337
	[any]: REDUCE dims_opt = 
337:	[any]: REDUCE variable_declarator_id = IDENTIFIER.IDENTIFIER dims_opt.d
338:	LBRACK: SHIFT; goto 180
	[any]: REDUCE dims_opt = dims.n
339:	[any]: REDUCE variable_declarators = variable_declarator.v
340:	[any]: REDUCE modifier = PUBLIC.PUBLIC
341:	[any]: REDUCE modifier = PROTECTED.PROTECTED
342:	[any]: REDUCE modifier = PRIVATE.PRIVATE
343:	[any]: REDUCE modifier = STATIC.STATIC
344:	[any]: REDUCE modifier = ABSTRACT.ABSTRACT
345:	[any]: REDUCE modifier = FINAL.FINAL
346:	[any]: REDUCE modifier = NATIVE.NATIVE
347:	[any]: REDUCE modifier = SYNCHRONIZED.SYNCHRONIZED
348:	[any]: REDUCE modifier = TRANSIENT.TRANSIENT
349:	[any]: REDUCE modifier = VOLATILE.VOLATILE
350:	[any]: REDUCE modifier = STRICTFP.STRICTFP
351:	IDENTIFIER: REDUCE type = primitive_type.t
	LBRACK: SHIFT; goto 182
	dims: SHIFT; goto 263
352:	IDENTIFIER: REDUCE type = reference_type.t
353:	[any]: REDUCE statement = statement_without_trailing_substatement.s
354:	[any]: REDUCE statement = labeled_statement.l
355:	[any]: REDUCE statement = if_then_statement.i
356:	[any]: REDUCE statement = if_then_else_statement.i
357:	[any]: REDUCE statement = while_statement.w
358:	[any]: REDUCE statement = for_statement.f
359:	SEMICOLON: SHIFT; goto 42
360:	IDENTIFIER: SHIFT; goto 336
	variable_declarator: SHIFT; goto 339
	variable_declarator_id: SHIFT; goto 80
	variable_declarators: SHIFT; goto 361
361:	SEMICOLON: REDUCE local_variable_declaration = type.t variable_declarators.l
	COMMA: SHIFT; goto 78
362:	[any]: REDUCE modifiers = modifier.m
363:	[any]: REDUCE statement_without_trailing_substatement = block.b
364:	[any]: REDUCE statement_without_trailing_substatement = empty_statement.e
365:	[any]: REDUCE statement_without_trailing_substatement = expression_statement.e
366:	[any]: REDUCE statement_without_trailing_substatement = switch_statement.s
367:	[any]: REDUCE statement_without_trailing_substatement = do_statement.d
368:	[any]: REDUCE statement_without_trailing_substatement = break_statement.b
369:	[any]: REDUCE statement_without_trailing_substatement = continue_statement.c
370:	[any]: REDUCE statement_without_trailing_substatement = return_statement.r
371:	[any]: REDUCE statement_without_trailing_substatement = synchronized_statement.s
372:	[any]: REDUCE statement_without_trailing_substatement = throw_statement.t
373:	[any]: REDUCE statement_without_trailing_substatement = try_statement.t
374:	[any]: REDUCE statement_without_trailing_substatement = safe_statement.t
375:	[any]: REDUCE statement_without_trailing_substatement = assert_statement.a
376:	COLON: SHIFT; goto 377
	[any]: REDUCE simple_name = IDENTIFIER.IDENTIFIER
377:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 378
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
378:	[any]: REDUCE labeled_statement = IDENTIFIER.id COLON.COLON statement.s
379:	LPAREN: SHIFT; goto 380
380:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 381
381:	RPAREN: SHIFT; goto 382
382:	IDENTIFIER: SHIFT; goto 520
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 530
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 535
	IF: SHIFT; goto 523
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 383
	statement_without_trailing_substatement: SHIFT; goto 515
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	statement_no_short_if: SHIFT; goto 384
	labeled_statement_no_short_if: SHIFT; goto 516
	if_then_else_statement_no_short_if: SHIFT; goto 517
	while_statement_no_short_if: SHIFT; goto 518
	for_statement_no_short_if: SHIFT; goto 519
383:	[any]: REDUCE if_then_statement = IF.IF LPAREN.LPAREN expression.e RPAREN.RPAREN statement.s
384:	ELSE: SHIFT; goto 385
385:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 386
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
386:	[any]: REDUCE if_then_else_statement = IF.IF LPAREN.LPAREN expression.e RPAREN.RPAREN statement_no_short_if.t ELSE.ELSE statement.els
387:	LPAREN: SHIFT; goto 388
388:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 389
389:	RPAREN: SHIFT; goto 390
390:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 391
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
391:	[any]: REDUCE while_statement = WHILE.WHILE LPAREN.LPAREN expression.e RPAREN.RPAREN statement.s
392:	LPAREN: SHIFT; goto 393
393:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: REDUCE for_init_opt = 
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 514
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 510
	local_variable_declaration: SHIFT; goto 513
	statement_expression_list: SHIFT; goto 512
	for_init_opt: SHIFT; goto 394
	for_init: SHIFT; goto 511
394:	SEMICOLON: SHIFT; goto 395
395:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: REDUCE expression_opt = 
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 439
	expression_opt: SHIFT; goto 396
396:	SEMICOLON: SHIFT; goto 397
397:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	RPAREN: REDUCE for_update_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	statement_expression: SHIFT; goto 510
	statement_expression_list: SHIFT; goto 507
	for_update_opt: SHIFT; goto 398
	for_update: SHIFT; goto 506
398:	RPAREN: SHIFT; goto 399
399:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 400
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
400:	[any]: REDUCE for_statement = FOR.FOR LPAREN.LPAREN for_init_opt.i SEMICOLON.SEMICOLON expression_opt.e SEMICOLON.SEMICOLON_ for_update_opt.u RPAREN.RPAREN statement.s
401:	[any]: REDUCE empty_statement = SEMICOLON.SEMICOLON
402:	SEMICOLON: SHIFT; goto 403
403:	[any]: REDUCE expression_statement = statement_expression.e SEMICOLON.SEMICOLON
404:	LPAREN: SHIFT; goto 405
405:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 406
406:	RPAREN: SHIFT; goto 407
407:	LBRACE: SHIFT; goto 409
	switch_block: SHIFT; goto 408
408:	[any]: REDUCE switch_statement = SWITCH.SWITCH LPAREN.LPAREN expression.e RPAREN.RPAREN switch_block.l
409:	RBRACE: SHIFT; goto 502
	CASE: SHIFT; goto 491
	DEFAULT: SHIFT; goto 495
	error: SHIFT; goto 503
	switch_label: SHIFT; goto 499
	switch_labels: SHIFT; goto 500
	switch_block_statement_group: SHIFT; goto 505
	switch_block_statement_groups: SHIFT; goto 410
410:	RBRACE: SHIFT; goto 497
	CASE: SHIFT; goto 491
	DEFAULT: SHIFT; goto 495
	switch_label: SHIFT; goto 499
	switch_labels: SHIFT; goto 411
	switch_block_statement_group: SHIFT; goto 498
411:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 412
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	CASE: SHIFT; goto 491
	DEFAULT: SHIFT; goto 495
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 490
	local_variable_declaration_statement: SHIFT; goto 45
	block_statements: SHIFT; goto 413
	switch_label: SHIFT; goto 489
412:	[any]: REDUCE switch_block = LBRACE.LBRACE switch_block_statement_groups.l switch_labels.s RBRACE.RBRACE
413:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 44
	local_variable_declaration_statement: SHIFT; goto 45
	[any]: REDUCE switch_block_statement_group = switch_labels.l block_statements.bl
414:	IDENTIFIER: REDUCE type = primitive_type.t
	LBRACK: SHIFT; goto 182
	DOT: SHIFT; goto 174
	dims: SHIFT; goto 415
415:	IDENTIFIER: REDUCE array_type = primitive_type.t dims.d
	LBRACK: SHIFT; goto 180
	DOT: SHIFT; goto 178
416:	LPAREN: SHIFT; goto 417
	[any]: REDUCE modifier = SYNCHRONIZED.SYNCHRONIZED
417:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 418
418:	RPAREN: SHIFT; goto 419
419:	LBRACE: SHIFT; goto 37
	block: SHIFT; goto 420
420:	[any]: REDUCE synchronized_statement = SYNCHRONIZED.SYNCHRONIZED LPAREN.LPAREN expression.e RPAREN.RPAREN block.b
421:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 422
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
422:	WHILE: SHIFT; goto 423
423:	LPAREN: SHIFT; goto 424
424:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 425
425:	RPAREN: SHIFT; goto 426
426:	SEMICOLON: SHIFT; goto 427
427:	[any]: REDUCE do_statement = DO.DO statement.s WHILE.WHILE LPAREN.LPAREN expression.e RPAREN.RPAREN SEMICOLON.SEMICOLON
428:	IDENTIFIER: SHIFT; goto 429
	SEMICOLON: SHIFT; goto 431
429:	SEMICOLON: SHIFT; goto 430
430:	[any]: REDUCE break_statement = BREAK.BREAK IDENTIFIER.id SEMICOLON.SEMICOLON
431:	[any]: REDUCE break_statement = BREAK.BREAK SEMICOLON.SEMICOLON
432:	IDENTIFIER: SHIFT; goto 433
	SEMICOLON: SHIFT; goto 435
433:	SEMICOLON: SHIFT; goto 434
434:	[any]: REDUCE continue_statement = CONTINUE.CONTINUE IDENTIFIER.id SEMICOLON.SEMICOLON
435:	[any]: REDUCE continue_statement = CONTINUE.CONTINUE SEMICOLON.SEMICOLON
436:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: REDUCE expression_opt = 
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 439
	expression_opt: SHIFT; goto 437
437:	SEMICOLON: SHIFT; goto 438
438:	[any]: REDUCE return_statement = RETURN.RETURN expression_opt.e SEMICOLON.SEMICOLON
439:	SEMICOLON: REDUCE expression_opt = expression.n
440:	LPAREN: SHIFT; goto 417
441:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 442
442:	SEMICOLON: SHIFT; goto 443
443:	[any]: REDUCE throw_statement = THROW.THROW expression.e SEMICOLON.SEMICOLON
444:	LBRACE: SHIFT; goto 37
	block: SHIFT; goto 445
445:	CATCH: SHIFT; goto 451
	FINALLY: SHIFT; goto 449
	finally: SHIFT; goto 463
	catch_clause: SHIFT; goto 464
	catches: SHIFT; goto 446
446:	CATCH: SHIFT; goto 451
	FINALLY: SHIFT; goto 449
	finally: SHIFT; goto 447
	catch_clause: SHIFT; goto 448
	[any]: REDUCE try_statement = TRY.TRY block.b catches.c
447:	[any]: REDUCE try_statement = TRY.TRY block.b catches.c finally.f
448:	[any]: REDUCE catches = catches.l catch_clause.c
449:	LBRACE: SHIFT; goto 37
	block: SHIFT; goto 450
450:	[any]: REDUCE finally = FINALLY.FINALLY block.b
451:	LPAREN: SHIFT; goto 452
452:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 459
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 456
	formal_parameter: SHIFT; goto 453
453:	RPAREN: SHIFT; goto 454
454:	LBRACE: SHIFT; goto 37
	block: SHIFT; goto 455
455:	[any]: REDUCE catch_clause = CATCH.CATCH LPAREN.LPAREN formal_parameter.p RPAREN.RPAREN block.b
456:	IDENTIFIER: SHIFT; goto 457
457:	LBRACK: SHIFT; goto 182
	dims: SHIFT; goto 338
	dims_opt: SHIFT; goto 458
	[any]: REDUCE dims_opt = 
458:	[any]: REDUCE formal_parameter = type.t IDENTIFIER.IDENTIFIER dims_opt.d
459:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 51
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 460
460:	IDENTIFIER: SHIFT; goto 461
461:	LBRACK: SHIFT; goto 182
	dims: SHIFT; goto 338
	dims_opt: SHIFT; goto 462
	[any]: REDUCE dims_opt = 
462:	[any]: REDUCE formal_parameter = modifiers.m type.t IDENTIFIER.IDENTIFIER dims_opt.d
463:	[any]: REDUCE try_statement = TRY.TRY block.b finally.f
464:	[any]: REDUCE catches = catch_clause.c
465:	LBRACE: SHIFT; goto 37
	block: SHIFT; goto 466
466:	CATCH: SHIFT; goto 451
	FINALLY: SHIFT; goto 449
	finally: SHIFT; goto 469
	catch_clause: SHIFT; goto 464
	catches: SHIFT; goto 467
467:	CATCH: SHIFT; goto 451
	FINALLY: SHIFT; goto 449
	finally: SHIFT; goto 468
	catch_clause: SHIFT; goto 448
	[any]: REDUCE safe_statement = SAFE.SAFE block.b catches.c
468:	[any]: REDUCE safe_statement = SAFE.SAFE block.b catches.c finally.f
469:	[any]: REDUCE safe_statement = SAFE.SAFE block.b finally.f
470:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 471
471:	SEMICOLON: SHIFT; goto 472
	COLON: SHIFT; goto 473
472:	[any]: REDUCE assert_statement = ASSERT.ASSERT expression.e SEMICOLON.SEMICOLON
473:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 474
474:	SEMICOLON: SHIFT; goto 475
475:	[any]: REDUCE assert_statement = ASSERT.ASSERT expression.e COLON.COLON expression.s SEMICOLON.SEMICOLON
476:	[any]: REDUCE statement_expression = assignment.a
477:	[any]: REDUCE statement_expression = preincrement_expression.e
478:	[any]: REDUCE statement_expression = predecrement_expression.e
479:	SEMICOLON: REDUCE statement_expression = postincrement_expression.e
	RPAREN: REDUCE statement_expression = postincrement_expression.e
	COMMA: REDUCE statement_expression = postincrement_expression.e
	[any]: REDUCE postfix_expression = postincrement_expression.e
480:	SEMICOLON: REDUCE statement_expression = postdecrement_expression.e
	RPAREN: REDUCE statement_expression = postdecrement_expression.e
	COMMA: REDUCE statement_expression = postdecrement_expression.e
	[any]: REDUCE postfix_expression = postdecrement_expression.e
481:	SEMICOLON: REDUCE statement_expression = method_invocation.i
	RPAREN: REDUCE statement_expression = method_invocation.i
	COMMA: REDUCE statement_expression = method_invocation.i
	[any]: REDUCE primary_no_new_array = method_invocation.m
482:	SEMICOLON: REDUCE statement_expression = class_instance_creation_expression.e
	RPAREN: REDUCE statement_expression = class_instance_creation_expression.e
	COMMA: REDUCE statement_expression = class_instance_creation_expression.e
	[any]: REDUCE primary_no_new_array = class_instance_creation_expression.c
483:	PLUSPLUS: SHIFT; goto 128
	MINUSMINUS: SHIFT; goto 129
	EQ: SHIFT; goto 148
	MULTEQ: SHIFT; goto 302
	DIVEQ: SHIFT; goto 304
	MODEQ: SHIFT; goto 306
	PLUSEQ: SHIFT; goto 308
	MINUSEQ: SHIFT; goto 310
	LSHIFTEQ: SHIFT; goto 312
	RSHIFTEQ: SHIFT; goto 314
	URSHIFTEQ: SHIFT; goto 316
	ANDEQ: SHIFT; goto 318
	XOREQ: SHIFT; goto 320
	OREQ: SHIFT; goto 322
484:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 485
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 189
485:	LPAREN: SHIFT; goto 282
	RPAREN: SHIFT; goto 486
	LBRACK: SHIFT; goto 285
	DOT: SHIFT; goto 152
	dims: SHIFT; goto 301
	[any]: REDUCE postfix_expression = name.n
486:	[any]: REDUCE primary_no_new_array = LPAREN.LPAREN name.n RPAREN.RPAREN
487:	IDENTIFIER: REDUCE class_or_interface_type = name.n
	LPAREN: SHIFT; goto 282
	LBRACK: SHIFT; goto 285
	DOT: SHIFT; goto 152
	dims: SHIFT; goto 488
	[any]: REDUCE postfix_expression = name.n
488:	IDENTIFIER: REDUCE array_type = name.n dims.d
	LBRACK: SHIFT; goto 180
	DOT: SHIFT; goto 193
489:	[any]: REDUCE switch_labels = switch_labels.l switch_label.s
490:	[any]: REDUCE block_statements = block_statement.b
491:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 494
	constant_expression: SHIFT; goto 492
492:	COLON: SHIFT; goto 493
493:	[any]: REDUCE switch_label = CASE.CASE constant_expression.e COLON.COLON
494:	COLON: REDUCE constant_expression = expression.e
495:	COLON: SHIFT; goto 496
496:	[any]: REDUCE switch_label = DEFAULT.DEFAULT COLON.COLON
497:	[any]: REDUCE switch_block = LBRACE.LBRACE switch_block_statement_groups.l RBRACE.RBRACE
498:	[any]: REDUCE switch_block_statement_groups = switch_block_statement_groups.l switch_block_statement_group.g
499:	[any]: REDUCE switch_labels = switch_label.s
500:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 501
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	CASE: SHIFT; goto 491
	DEFAULT: SHIFT; goto 495
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 490
	local_variable_declaration_statement: SHIFT; goto 45
	block_statements: SHIFT; goto 413
	switch_label: SHIFT; goto 489
501:	[any]: REDUCE switch_block = LBRACE.LBRACE switch_labels.l RBRACE.RBRACE
502:	[any]: REDUCE switch_block = LBRACE.LBRACE RBRACE.RBRACE
503:	RBRACE: SHIFT; goto 504
504:	[any]: REDUCE switch_block = LBRACE.LBRACE error.error RBRACE.RBRACE
505:	[any]: REDUCE switch_block_statement_groups = switch_block_statement_group.g
506:	RPAREN: REDUCE for_update_opt = for_update.n
507:	RPAREN: REDUCE for_update = statement_expression_list.l
	COMMA: SHIFT; goto 508
508:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	statement_expression: SHIFT; goto 509
509:	[any]: REDUCE statement_expression_list = statement_expression_list.l COMMA.COMMA statement_expression.e
510:	[any]: REDUCE statement_expression_list = statement_expression.e
511:	SEMICOLON: REDUCE for_init_opt = for_init.n
512:	SEMICOLON: REDUCE for_init = statement_expression_list.l
	COMMA: SHIFT; goto 508
513:	SEMICOLON: REDUCE for_init = local_variable_declaration.d
514:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 51
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 76
515:	ELSE: REDUCE statement_no_short_if = statement_without_trailing_substatement.s
	[any]: REDUCE statement = statement_without_trailing_substatement.s
516:	ELSE: REDUCE statement_no_short_if = labeled_statement_no_short_if.l
517:	ELSE: REDUCE statement_no_short_if = if_then_else_statement_no_short_if.i
518:	ELSE: REDUCE statement_no_short_if = while_statement_no_short_if.w
519:	ELSE: REDUCE statement_no_short_if = for_statement_no_short_if.f
520:	COLON: SHIFT; goto 521
	[any]: REDUCE simple_name = IDENTIFIER.IDENTIFIER
521:	IDENTIFIER: SHIFT; goto 520
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 530
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 535
	IF: SHIFT; goto 523
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 378
	statement_without_trailing_substatement: SHIFT; goto 515
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	statement_no_short_if: SHIFT; goto 522
	labeled_statement_no_short_if: SHIFT; goto 516
	if_then_else_statement_no_short_if: SHIFT; goto 517
	while_statement_no_short_if: SHIFT; goto 518
	for_statement_no_short_if: SHIFT; goto 519
522:	ELSE: REDUCE labeled_statement_no_short_if = IDENTIFIER.id COLON.COLON statement_no_short_if.s
523:	LPAREN: SHIFT; goto 524
524:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 525
525:	RPAREN: SHIFT; goto 526
526:	IDENTIFIER: SHIFT; goto 520
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 530
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 535
	IF: SHIFT; goto 523
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 383
	statement_without_trailing_substatement: SHIFT; goto 515
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	statement_no_short_if: SHIFT; goto 527
	labeled_statement_no_short_if: SHIFT; goto 516
	if_then_else_statement_no_short_if: SHIFT; goto 517
	while_statement_no_short_if: SHIFT; goto 518
	for_statement_no_short_if: SHIFT; goto 519
527:	ELSE: SHIFT; goto 528
528:	IDENTIFIER: SHIFT; goto 520
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 530
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 535
	IF: SHIFT; goto 523
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 386
	statement_without_trailing_substatement: SHIFT; goto 515
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	statement_no_short_if: SHIFT; goto 529
	labeled_statement_no_short_if: SHIFT; goto 516
	if_then_else_statement_no_short_if: SHIFT; goto 517
	while_statement_no_short_if: SHIFT; goto 518
	for_statement_no_short_if: SHIFT; goto 519
529:	ELSE: REDUCE if_then_else_statement_no_short_if = IF.IF LPAREN.LPAREN expression.e RPAREN.RPAREN statement_no_short_if.t ELSE.ELSE statement_no_short_if.els
530:	LPAREN: SHIFT; goto 531
531:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 532
532:	RPAREN: SHIFT; goto 533
533:	IDENTIFIER: SHIFT; goto 520
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 530
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 535
	IF: SHIFT; goto 523
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 391
	statement_without_trailing_substatement: SHIFT; goto 515
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	statement_no_short_if: SHIFT; goto 534
	labeled_statement_no_short_if: SHIFT; goto 516
	if_then_else_statement_no_short_if: SHIFT; goto 517
	while_statement_no_short_if: SHIFT; goto 518
	for_statement_no_short_if: SHIFT; goto 519
534:	ELSE: REDUCE while_statement_no_short_if = WHILE.WHILE LPAREN.LPAREN expression.e RPAREN.RPAREN statement_no_short_if.s
535:	LPAREN: SHIFT; goto 536
536:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: REDUCE for_init_opt = 
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 514
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 510
	local_variable_declaration: SHIFT; goto 513
	statement_expression_list: SHIFT; goto 512
	for_init_opt: SHIFT; goto 537
	for_init: SHIFT; goto 511
537:	SEMICOLON: SHIFT; goto 538
538:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: REDUCE expression_opt = 
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 439
	expression_opt: SHIFT; goto 539
539:	SEMICOLON: SHIFT; goto 540
540:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	RPAREN: REDUCE for_update_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	statement_expression: SHIFT; goto 510
	statement_expression_list: SHIFT; goto 507
	for_update_opt: SHIFT; goto 541
	for_update: SHIFT; goto 506
541:	RPAREN: SHIFT; goto 542
542:	IDENTIFIER: SHIFT; goto 520
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 440
	WHILE: SHIFT; goto 530
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 535
	IF: SHIFT; goto 523
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	block: SHIFT; goto 363
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	statement: SHIFT; goto 400
	statement_without_trailing_substatement: SHIFT; goto 515
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	statement_no_short_if: SHIFT; goto 543
	labeled_statement_no_short_if: SHIFT; goto 516
	if_then_else_statement_no_short_if: SHIFT; goto 517
	while_statement_no_short_if: SHIFT; goto 518
	for_statement_no_short_if: SHIFT; goto 519
543:	ELSE: REDUCE for_statement_no_short_if = FOR.FOR LPAREN.LPAREN for_init_opt.i SEMICOLON.SEMICOLON expression_opt.e SEMICOLON.SEMICOLON_ for_update_opt.u RPAREN.RPAREN statement_no_short_if.s
544:	LPAREN: SHIFT; goto 545
	[any]: REDUCE simple_name = IDENTIFIER.IDENTIFIER
545:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	RPAREN: REDUCE formal_parameter_list_opt = 
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 459
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 456
	formal_parameter: SHIFT; goto 590
	formal_parameter_list_opt: SHIFT; goto 546
	formal_parameter_list: SHIFT; goto 587
546:	RPAREN: SHIFT; goto 547
547:	LBRACE: REDUCE throws_opt = 
	THROWS: SHIFT; goto 582
	throws: SHIFT; goto 581
	throws_opt: SHIFT; goto 548
548:	LBRACE: SHIFT; goto 549
549:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 562
	THIS: SHIFT; goto 557
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 550
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 574
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 567
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 490
	local_variable_declaration_statement: SHIFT; goto 45
	block_statements: SHIFT; goto 555
	explicit_constructor_invocation: SHIFT; goto 551
550:	[any]: REDUCE constructor_declaration = IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.pl RPAREN.RPAREN throws_opt.tl LBRACE.LBRACE RBRACE.RBRACE
551:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 552
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 490
	local_variable_declaration_statement: SHIFT; goto 45
	block_statements: SHIFT; goto 553
552:	[any]: REDUCE constructor_declaration = IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.pl RPAREN.RPAREN throws_opt.tl LBRACE.LBRACE explicit_constructor_invocation.c RBRACE.RBRACE
553:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 554
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 44
	local_variable_declaration_statement: SHIFT; goto 45
554:	[any]: REDUCE constructor_declaration = IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.pl RPAREN.RPAREN throws_opt.tl LBRACE.LBRACE explicit_constructor_invocation.c block_statements.l RBRACE.RBRACE
555:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 556
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 44
	local_variable_declaration_statement: SHIFT; goto 45
556:	[any]: REDUCE constructor_declaration = IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.pl RPAREN.RPAREN throws_opt.tl LBRACE.LBRACE block_statements.l RBRACE.RBRACE
557:	LPAREN: SHIFT; goto 558
	[any]: REDUCE primary_no_new_array = THIS.THIS
558:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 559
	argument_list: SHIFT; goto 144
559:	RPAREN: SHIFT; goto 560
560:	SEMICOLON: SHIFT; goto 561
561:	[any]: REDUCE explicit_constructor_invocation = THIS.THIS LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN SEMICOLON.SEMICOLON
562:	LPAREN: SHIFT; goto 563
	DOT: SHIFT; goto 219
563:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 564
	argument_list: SHIFT; goto 144
564:	RPAREN: SHIFT; goto 565
565:	SEMICOLON: SHIFT; goto 566
566:	[any]: REDUCE explicit_constructor_invocation = SUPER.SUPER LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN SEMICOLON.SEMICOLON
567:	DOT: SHIFT; goto 568
	[any]: REDUCE postfix_expression = primary.p
568:	IDENTIFIER: SHIFT; goto 325
	NEW: SHIFT; goto 137
	SUPER: SHIFT; goto 569
	simple_name: SHIFT; goto 324
569:	LPAREN: SHIFT; goto 570
570:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 571
	argument_list: SHIFT; goto 144
571:	RPAREN: SHIFT; goto 572
572:	SEMICOLON: SHIFT; goto 573
573:	[any]: REDUCE explicit_constructor_invocation = primary.p DOT.DOT SUPER.SUPER LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN SEMICOLON.SEMICOLON
574:	IDENTIFIER: REDUCE class_or_interface_type = name.n
	LPAREN: SHIFT; goto 282
	LBRACK: SHIFT; goto 285
	DOT: SHIFT; goto 575
	dims: SHIFT; goto 488
	[any]: REDUCE postfix_expression = name.n
575:	IDENTIFIER: SHIFT; goto 67
	NEW: SHIFT; goto 155
	SUPER: SHIFT; goto 576
	THIS: SHIFT; goto 154
	CLASS: SHIFT; goto 176
	simple_name: SHIFT; goto 66
	class_literal: SHIFT; goto 153
576:	LPAREN: SHIFT; goto 577
	DOT: SHIFT; goto 295
577:	IDENTIFIER: SHIFT; goto 67
	LPAREN: SHIFT; goto 188
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	PLUS: SHIFT; goto 118
	MINUS: SHIFT; goto 120
	COMP: SHIFT; goto 130
	NOT: SHIFT; goto 132
	RPAREN: REDUCE argument_list_opt = 
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 151
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 173
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 147
	postincrement_expression: SHIFT; goto 162
	postdecrement_expression: SHIFT; goto 163
	method_invocation: SHIFT; goto 199
	class_instance_creation_expression: SHIFT; goto 197
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 116
	predecrement_expression: SHIFT; goto 117
	unary_expression_not_plus_minus: SHIFT; goto 122
	cast_expression: SHIFT; goto 134
	assignment: SHIFT; goto 94
	unary_expression: SHIFT; goto 247
	multiplicative_expression: SHIFT; goto 248
	additive_expression: SHIFT; goto 251
	shift_expression: SHIFT; goto 264
	relational_expression: SHIFT; goto 265
	equality_expression: SHIFT; goto 225
	and_expression: SHIFT; goto 207
	exclusive_or_expression: SHIFT; goto 171
	inclusive_or_expression: SHIFT; goto 164
	conditional_and_expression: SHIFT; goto 150
	conditional_or_expression: SHIFT; goto 95
	conditional_expression: SHIFT; goto 93
	assignment_expression: SHIFT; goto 85
	expression: SHIFT; goto 161
	argument_list_opt: SHIFT; goto 578
	argument_list: SHIFT; goto 144
578:	RPAREN: SHIFT; goto 579
579:	SEMICOLON: SHIFT; goto 580
580:	[any]: REDUCE explicit_constructor_invocation = name.n DOT.DOT SUPER.SUPER LPAREN.LPAREN argument_list_opt.l RPAREN.RPAREN SEMICOLON.SEMICOLON
581:	[any]: REDUCE throws_opt = throws.n
582:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 64
	qualified_name: SHIFT; goto 69
	class_or_interface_type: SHIFT; goto 75
	class_type: SHIFT; goto 586
	class_type_list: SHIFT; goto 583
583:	COMMA: SHIFT; goto 584
	[any]: REDUCE throws = THROWS.THROWS class_type_list.l
584:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 64
	qualified_name: SHIFT; goto 69
	class_or_interface_type: SHIFT; goto 75
	class_type: SHIFT; goto 585
585:	[any]: REDUCE class_type_list = class_type_list.l COMMA.COMMA class_type.c
586:	[any]: REDUCE class_type_list = class_type.c
587:	RPAREN: REDUCE formal_parameter_list_opt = formal_parameter_list.n
	COMMA: SHIFT; goto 588
588:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 459
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 456
	formal_parameter: SHIFT; goto 589
589:	[any]: REDUCE formal_parameter_list = formal_parameter_list.l COMMA.COMMA formal_parameter.f
590:	[any]: REDUCE formal_parameter_list = formal_parameter.f
591:	IDENTIFIER: SHIFT; goto 608
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 602
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 52
	INTERFACE: SHIFT; goto 621
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 51
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 592
592:	IDENTIFIER: SHIFT; goto 595
	variable_declarator: SHIFT; goto 339
	variable_declarator_id: SHIFT; goto 80
	variable_declarators: SHIFT; goto 593
593:	SEMICOLON: SHIFT; goto 594
	COMMA: SHIFT; goto 78
594:	[any]: REDUCE field_declaration = modifiers.m type.t variable_declarators.v SEMICOLON.SEMICOLON
595:	LPAREN: SHIFT; goto 596
	LBRACK: SHIFT; goto 182
	dims: SHIFT; goto 338
	dims_opt: SHIFT; goto 337
	[any]: REDUCE dims_opt = 
596:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	RPAREN: REDUCE formal_parameter_list_opt = 
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 459
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 456
	formal_parameter: SHIFT; goto 590
	formal_parameter_list_opt: SHIFT; goto 597
	formal_parameter_list: SHIFT; goto 587
597:	RPAREN: SHIFT; goto 598
598:	LBRACK: SHIFT; goto 182
	THROWS: SHIFT; goto 582
	dims: SHIFT; goto 599
	throws: SHIFT; goto 601
	[any]: REDUCE method_header = modifiers.m type.t IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN
599:	LBRACK: SHIFT; goto 180
	THROWS: SHIFT; goto 582
	throws: SHIFT; goto 600
	[any]: REDUCE method_header = modifiers.m type.t IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN dims.d
600:	[any]: REDUCE method_header = modifiers.m type.t IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN dims.d throws.tl
601:	[any]: REDUCE method_header = modifiers.m type.t IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN throws.tl
602:	IDENTIFIER: SHIFT; goto 603
603:	LPAREN: SHIFT; goto 604
604:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	RPAREN: REDUCE formal_parameter_list_opt = 
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 459
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 456
	formal_parameter: SHIFT; goto 590
	formal_parameter_list_opt: SHIFT; goto 605
	formal_parameter_list: SHIFT; goto 587
605:	RPAREN: SHIFT; goto 606
606:	THROWS: SHIFT; goto 582
	throws: SHIFT; goto 581
	throws_opt: SHIFT; goto 607
	[any]: REDUCE throws_opt = 
607:	[any]: REDUCE method_header = modifiers.m VOID.VOID IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN throws_opt.tl
608:	LPAREN: SHIFT; goto 609
	[any]: REDUCE simple_name = IDENTIFIER.IDENTIFIER
609:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	RPAREN: REDUCE formal_parameter_list_opt = 
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 459
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 456
	formal_parameter: SHIFT; goto 590
	formal_parameter_list_opt: SHIFT; goto 610
	formal_parameter_list: SHIFT; goto 587
610:	RPAREN: SHIFT; goto 611
611:	LBRACE: REDUCE throws_opt = 
	THROWS: SHIFT; goto 582
	throws: SHIFT; goto 581
	throws_opt: SHIFT; goto 612
612:	LBRACE: SHIFT; goto 613
613:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 562
	THIS: SHIFT; goto 557
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 614
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 574
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 567
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 490
	local_variable_declaration_statement: SHIFT; goto 45
	block_statements: SHIFT; goto 619
	explicit_constructor_invocation: SHIFT; goto 615
614:	[any]: REDUCE constructor_declaration = modifiers.m IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.pl RPAREN.RPAREN throws_opt.tl LBRACE.LBRACE RBRACE.RBRACE
615:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 616
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 490
	local_variable_declaration_statement: SHIFT; goto 45
	block_statements: SHIFT; goto 617
616:	[any]: REDUCE constructor_declaration = modifiers.m IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.pl RPAREN.RPAREN throws_opt.tl LBRACE.LBRACE explicit_constructor_invocation.c RBRACE.RBRACE
617:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 618
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 44
	local_variable_declaration_statement: SHIFT; goto 45
618:	[any]: REDUCE constructor_declaration = modifiers.m IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.pl RPAREN.RPAREN throws_opt.tl LBRACE.LBRACE explicit_constructor_invocation.c block_statements.l RBRACE.RBRACE
619:	IDENTIFIER: SHIFT; goto 376
	LPAREN: SHIFT; goto 484
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 184
	NEW: SHIFT; goto 201
	SUPER: SHIFT; goto 218
	THIS: SHIFT; goto 187
	PLUSPLUS: SHIFT; goto 123
	MINUSMINUS: SHIFT; goto 125
	INTEGER_LITERAL: SHIFT; goto 208
	LONG_LITERAL: SHIFT; goto 209
	FLOATING_POINT_LITERAL: SHIFT; goto 210
	DOUBLE_LITERAL: SHIFT; goto 211
	BOOLEAN_LITERAL: SHIFT; goto 212
	CHARACTER_LITERAL: SHIFT; goto 213
	STRING_LITERAL: SHIFT; goto 214
	NULL_LITERAL: SHIFT; goto 215
	SEMICOLON: SHIFT; goto 401
	LBRACE: SHIFT; goto 37
	SYNCHRONIZED: SHIFT; goto 416
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: SHIFT; goto 620
	WHILE: SHIFT; goto 387
	DO: SHIFT; goto 421
	FOR: SHIFT; goto 392
	IF: SHIFT; goto 379
	SWITCH: SHIFT; goto 404
	BREAK: SHIFT; goto 428
	CONTINUE: SHIFT; goto 432
	ASSERT: SHIFT; goto 470
	RETURN: SHIFT; goto 436
	THROW: SHIFT; goto 441
	TRY: SHIFT; goto 444
	SAFE: SHIFT; goto 465
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 487
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 414
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	primary: SHIFT; goto 135
	primary_no_new_array: SHIFT; goto 165
	postfix_expression: SHIFT; goto 483
	postincrement_expression: SHIFT; goto 479
	postdecrement_expression: SHIFT; goto 480
	method_invocation: SHIFT; goto 481
	class_instance_creation_expression: SHIFT; goto 482
	array_creation_init: SHIFT; goto 169
	array_creation_uninit: SHIFT; goto 170
	literal: SHIFT; goto 172
	field_access: SHIFT; goto 198
	array_access: SHIFT; goto 200
	preincrement_expression: SHIFT; goto 477
	predecrement_expression: SHIFT; goto 478
	assignment: SHIFT; goto 476
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 50
	block: SHIFT; goto 363
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 360
	statement_expression: SHIFT; goto 402
	error: SHIFT; goto 359
	class_declaration: SHIFT; goto 46
	statement: SHIFT; goto 47
	statement_without_trailing_substatement: SHIFT; goto 353
	labeled_statement: SHIFT; goto 354
	if_then_statement: SHIFT; goto 355
	if_then_else_statement: SHIFT; goto 356
	while_statement: SHIFT; goto 357
	for_statement: SHIFT; goto 358
	empty_statement: SHIFT; goto 364
	expression_statement: SHIFT; goto 365
	switch_statement: SHIFT; goto 366
	do_statement: SHIFT; goto 367
	break_statement: SHIFT; goto 368
	continue_statement: SHIFT; goto 369
	return_statement: SHIFT; goto 370
	synchronized_statement: SHIFT; goto 371
	throw_statement: SHIFT; goto 372
	try_statement: SHIFT; goto 373
	safe_statement: SHIFT; goto 374
	assert_statement: SHIFT; goto 375
	local_variable_declaration: SHIFT; goto 48
	block_statement: SHIFT; goto 44
	local_variable_declaration_statement: SHIFT; goto 45
620:	[any]: REDUCE constructor_declaration = modifiers.m IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.pl RPAREN.RPAREN throws_opt.tl LBRACE.LBRACE block_statements.l RBRACE.RBRACE
621:	IDENTIFIER: SHIFT; goto 622
622:	LBRACE: SHIFT; goto 628
	EXTENDS: SHIFT; goto 647
	interface_body: SHIFT; goto 623
	extends_interfaces: SHIFT; goto 624
623:	[any]: REDUCE interface_declaration = modifiers.m INTERFACE.INTERFACE IDENTIFIER.IDENTIFIER interface_body.b
624:	LBRACE: SHIFT; goto 628
	COMMA: SHIFT; goto 626
	interface_body: SHIFT; goto 625
625:	[any]: REDUCE interface_declaration = modifiers.m INTERFACE.INTERFACE IDENTIFIER.IDENTIFIER extends_interfaces.i interface_body.b
626:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 64
	qualified_name: SHIFT; goto 69
	class_or_interface_type: SHIFT; goto 63
	interface_type: SHIFT; goto 627
627:	[any]: REDUCE extends_interfaces = extends_interfaces.l COMMA.COMMA interface_type.i
628:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 659
	SEMICOLON: SHIFT; goto 637
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: REDUCE interface_member_declarations_opt = 
	INTERFACE: SHIFT; goto 642
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 641
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 649
	class_declaration: SHIFT; goto 635
	interface_declaration: SHIFT; goto 636
	method_header: SHIFT; goto 639
	field_declaration: SHIFT; goto 638
	interface_member_declaration: SHIFT; goto 665
	constant_declaration: SHIFT; goto 633
	abstract_method_declaration: SHIFT; goto 634
	interface_member_declarations: SHIFT; goto 631
	interface_member_declarations_opt: SHIFT; goto 629
629:	RBRACE: SHIFT; goto 630
630:	[any]: REDUCE interface_body = LBRACE.LBRACE interface_member_declarations_opt.i RBRACE.RBRACE
631:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 659
	SEMICOLON: SHIFT; goto 637
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	RBRACE: REDUCE interface_member_declarations_opt = interface_member_declarations.n
	INTERFACE: SHIFT; goto 642
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 641
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 649
	class_declaration: SHIFT; goto 635
	interface_declaration: SHIFT; goto 636
	method_header: SHIFT; goto 639
	field_declaration: SHIFT; goto 638
	interface_member_declaration: SHIFT; goto 632
	constant_declaration: SHIFT; goto 633
	abstract_method_declaration: SHIFT; goto 634
632:	[any]: REDUCE interface_member_declarations = interface_member_declarations.l interface_member_declaration.i
633:	[any]: REDUCE interface_member_declaration = constant_declaration.c
634:	[any]: REDUCE interface_member_declaration = abstract_method_declaration.a
635:	[any]: REDUCE interface_member_declaration = class_declaration.c
636:	[any]: REDUCE interface_member_declaration = interface_declaration.i
637:	[any]: REDUCE interface_member_declaration = SEMICOLON.SEMICOLON
638:	[any]: REDUCE constant_declaration = field_declaration.f
639:	SEMICOLON: SHIFT; goto 640
640:	[any]: REDUCE abstract_method_declaration = method_header.m SEMICOLON.SEMICOLON
641:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	VOID: SHIFT; goto 602
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 52
	INTERFACE: SHIFT; goto 621
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 51
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 592
642:	IDENTIFIER: SHIFT; goto 643
643:	LBRACE: SHIFT; goto 628
	EXTENDS: SHIFT; goto 647
	interface_body: SHIFT; goto 644
	extends_interfaces: SHIFT; goto 645
644:	[any]: REDUCE interface_declaration = INTERFACE.INTERFACE IDENTIFIER.IDENTIFIER interface_body.b
645:	LBRACE: SHIFT; goto 628
	COMMA: SHIFT; goto 626
	interface_body: SHIFT; goto 646
646:	[any]: REDUCE interface_declaration = INTERFACE.INTERFACE IDENTIFIER.IDENTIFIER extends_interfaces.i interface_body.b
647:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 64
	qualified_name: SHIFT; goto 69
	class_or_interface_type: SHIFT; goto 63
	interface_type: SHIFT; goto 648
648:	[any]: REDUCE extends_interfaces = EXTENDS.EXTENDS interface_type.i
649:	IDENTIFIER: SHIFT; goto 652
	variable_declarator: SHIFT; goto 339
	variable_declarator_id: SHIFT; goto 80
	variable_declarators: SHIFT; goto 650
650:	SEMICOLON: SHIFT; goto 651
	COMMA: SHIFT; goto 78
651:	[any]: REDUCE field_declaration = type.t variable_declarators.v SEMICOLON.SEMICOLON
652:	LPAREN: SHIFT; goto 653
	LBRACK: SHIFT; goto 182
	dims: SHIFT; goto 338
	dims_opt: SHIFT; goto 337
	[any]: REDUCE dims_opt = 
653:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	RPAREN: REDUCE formal_parameter_list_opt = 
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 459
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 456
	formal_parameter: SHIFT; goto 590
	formal_parameter_list_opt: SHIFT; goto 654
	formal_parameter_list: SHIFT; goto 587
654:	RPAREN: SHIFT; goto 655
655:	LBRACK: SHIFT; goto 182
	THROWS: SHIFT; goto 582
	dims: SHIFT; goto 656
	throws: SHIFT; goto 658
	[any]: REDUCE method_header = type.t IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN
656:	LBRACK: SHIFT; goto 180
	THROWS: SHIFT; goto 582
	throws: SHIFT; goto 657
	[any]: REDUCE method_header = type.t IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN dims.d
657:	[any]: REDUCE method_header = type.t IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN dims.d throws.tl
658:	[any]: REDUCE method_header = type.t IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN throws.tl
659:	IDENTIFIER: SHIFT; goto 660
660:	LPAREN: SHIFT; goto 661
661:	IDENTIFIER: SHIFT; goto 67
	BOOLEAN: SHIFT; goto 217
	BYTE: SHIFT; goto 238
	SHORT: SHIFT; goto 239
	INT: SHIFT; goto 240
	LONG: SHIFT; goto 241
	CHAR: SHIFT; goto 242
	FLOAT: SHIFT; goto 243
	DOUBLE: SHIFT; goto 244
	RPAREN: REDUCE formal_parameter_list_opt = 
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 260
	qualified_name: SHIFT; goto 69
	primitive_type: SHIFT; goto 351
	numeric_type: SHIFT; goto 216
	integral_type: SHIFT; goto 236
	floating_point_type: SHIFT; goto 237
	class_or_interface_type: SHIFT; goto 258
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 459
	reference_type: SHIFT; goto 352
	array_type: SHIFT; goto 259
	type: SHIFT; goto 456
	formal_parameter: SHIFT; goto 590
	formal_parameter_list_opt: SHIFT; goto 662
	formal_parameter_list: SHIFT; goto 587
662:	RPAREN: SHIFT; goto 663
663:	THROWS: SHIFT; goto 582
	throws: SHIFT; goto 581
	throws_opt: SHIFT; goto 664
	[any]: REDUCE throws_opt = 
664:	[any]: REDUCE method_header = VOID.VOID IDENTIFIER.IDENTIFIER LPAREN.LPAREN formal_parameter_list_opt.l RPAREN.RPAREN throws_opt.tl
665:	[any]: REDUCE interface_member_declarations = interface_member_declaration.i
666:	SEMICOLON: SHIFT; goto 669
	LBRACE: SHIFT; goto 37
	block: SHIFT; goto 668
	method_body: SHIFT; goto 667
667:	[any]: REDUCE method_declaration = method_header.m method_body.b
668:	[any]: REDUCE method_body = block.b
669:	[any]: REDUCE method_body = SEMICOLON.SEMICOLON
670:	[any]: REDUCE class_body_declarations = class_body_declaration.c
671:	LBRACE: SHIFT; goto 17
	class_body: SHIFT; goto 672
672:	[any]: REDUCE class_declaration = CLASS.CLASS IDENTIFIER.IDENTIFIER interfaces.i class_body.b
673:	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 52
	INTERFACE: SHIFT; goto 621
	modifier: SHIFT; goto 51
674:	[any]: REDUCE import_declarations = import_declarations.l import_declaration.i
675:	[any]: REDUCE type_declarations = type_declaration.t
676:	[any]: REDUCE import_declaration = single_type_import_declaration.s
677:	[any]: REDUCE import_declaration = type_import_on_demand_declaration.t
678:	IDENTIFIER: SHIFT; goto 67
	simple_name: SHIFT; goto 68
	name: SHIFT; goto 679
	qualified_name: SHIFT; goto 69
679:	SEMICOLON: SHIFT; goto 683
	DOT: SHIFT; goto 680
680:	IDENTIFIER: SHIFT; goto 67
	MULT: SHIFT; goto 681
	simple_name: SHIFT; goto 66
681:	SEMICOLON: SHIFT; goto 682
682:	[any]: REDUCE type_import_on_demand_declaration = IMPORT.IMPORT name.n DOT.DOT MULT.MULT SEMICOLON.SEMICOLON
683:	[any]: REDUCE single_type_import_declaration = IMPORT.IMPORT name.n SEMICOLON.SEMICOLON
684:	EOF: REDUCE compilation_unit = package_declaration.p type_declarations.t
	SEMICOLON: SHIFT; goto 9
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	INTERFACE: SHIFT; goto 642
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 673
	class_declaration: SHIFT; goto 7
	interface_declaration: SHIFT; goto 8
	type_declaration: SHIFT; goto 6
685:	[any]: REDUCE import_declarations = import_declaration.i
686:	EOF: REDUCE compilation_unit = import_declarations.i
	SEMICOLON: SHIFT; goto 9
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	INTERFACE: SHIFT; goto 642
	IMPORT: SHIFT; goto 678
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 673
	class_declaration: SHIFT; goto 7
	interface_declaration: SHIFT; goto 8
	type_declaration: SHIFT; goto 675
	type_declarations: SHIFT; goto 687
	import_declaration: SHIFT; goto 674
	single_type_import_declaration: SHIFT; goto 676
	type_import_on_demand_declaration: SHIFT; goto 677
687:	EOF: REDUCE compilation_unit = import_declarations.i type_declarations.t
	SEMICOLON: SHIFT; goto 9
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	INTERFACE: SHIFT; goto 642
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 673
	class_declaration: SHIFT; goto 7
	interface_declaration: SHIFT; goto 8
	type_declaration: SHIFT; goto 6
688:	EOF: REDUCE compilation_unit = type_declarations.t
	SEMICOLON: SHIFT; goto 9
	SYNCHRONIZED: SHIFT; goto 347
	PUBLIC: SHIFT; goto 340
	PROTECTED: SHIFT; goto 341
	PRIVATE: SHIFT; goto 342
	STATIC: SHIFT; goto 343
	ABSTRACT: SHIFT; goto 344
	FINAL: SHIFT; goto 345
	NATIVE: SHIFT; goto 346
	TRANSIENT: SHIFT; goto 348
	VOLATILE: SHIFT; goto 349
	STRICTFP: SHIFT; goto 350
	CLASS: SHIFT; goto 10
	INTERFACE: SHIFT; goto 642
	modifier: SHIFT; goto 362
	modifiers: SHIFT; goto 673
	class_declaration: SHIFT; goto 7
	interface_declaration: SHIFT; goto 8
	type_declaration: SHIFT; goto 6
689:	IDENTIFIER: SHIFT; goto 696
	name_decl: SHIFT; goto 690
	simple_name_decl: SHIFT; goto 694
	qualified_name_decl: SHIFT; goto 695
690:	SEMICOLON: SHIFT; goto 691
	DOT: SHIFT; goto 692
691:	[any]: REDUCE package_declaration = PACKAGE.PACKAGE name_decl.n SEMICOLON.SEMICOLON
692:	IDENTIFIER: SHIFT; goto 693
693:	[any]: REDUCE qualified_name_decl = name_decl.n DOT.DOT IDENTIFIER.i
694:	[any]: REDUCE name_decl = simple_name_decl.s
695:	[any]: REDUCE name_decl = qualified_name_decl.q
696:	[any]: REDUCE simple_name_decl = IDENTIFIER.IDENTIFIER
